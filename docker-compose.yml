version: '3'

services:
  web:
    restart: always
    container_name: webapp
    build: .
    expose:
      - "8000"
    links:
      - redis:redis
    ports:
      - "8000:8000"
    volumes:
      - .:/usr/src/app 
    # volumes:
      # - web:/usr/src/app
      # - web-static:/usr/src/app/static
    env_file: .env
    # environment:
      # DEBUG: 'true' 
    # command: /usr/local/bin/gunicorn app.wsgi.application -w 2 -b :8000
    # command: /bin/bash -c "cd ./web && ./manage.py runserver"
    command: python manage.py runserver 0.0.0.0:8000
  
  nginx:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    tty: true
    command: [nginx-debug, '-g', 'daemon off;']
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"
    environment:
      - HTTP_HOST=127.0.0.1:8000
      - NGINX_HOST=api-mundo-backendmundoglobo.com.br
      - NGINX_PORT=80
    links:
      - web:web

  redis:
    restart: always
    image: redis:latest
    container_name: db
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  ui:
    image: portainer/portainer
    restart: always
    container_name: ui
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
    expose:
        - 9000
    ports:
        - 3002:9000

  netdata:
    image: netdata/netdata
    hostname: api-mundo-backendmundoglobo.com.br # set to fqdn of host
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  web:
    # driver: local
  web-static:
    # driver: local
  redisdata:
    # driver: local

